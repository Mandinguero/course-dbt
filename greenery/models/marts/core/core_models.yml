-- models generated with docgen: 
-- syntax: dbt run-operation generate_model_yaml --args ...

version: 2

models:
  - name: dim_users
    description: ""
    columns:
      - name: user_id
        description: ""
        tests:
          - not_null
          - unique
        # used to run only tests on columns with this tag: 
        # "dbt test --select tag:my_test_tag"
        tags: ['unique_key_tag']  

      - name: user_email
        description: ""

      - name: user_first_name
        description: ""

      - name: user_last_name
        description: ""

      - name: user_phone_number
        description: ""

      - name: user_created_at_utc
        description: ""

      - name: user_updated_at_utc
        description: ""

      - name: user_created_date
        description: ""

      - name: user_updated_date
        description: ""

      - name: num_orders_made
        description: ""

      - name: first_order_timestamp_utc
        description: ""

      - name: last_order_timestamp_utc
        description: ""

      - name: avg_order_cost_usd
        description: ""

      - name: lifetime_order_amount_usd
        description: ""
        tests:
          - positive_values

      - name: num_distinct_products_pruchased
        description: ""

  - name: fact_orders
    description: ""
    columns:
      - name: order_id
        description: ""
        tests:
          - not_null
          - unique
        # used to run only tests on columns with this tag: 
        # "dbt test --select tag:my_test_tag"
        tags: ['unique_key_tag']  

      - name: order_created_utc
        description: ""

      - name: order_created_date
        description: ""
        # dbt_utils generic test: accepted_range()
        # Check that a column's values fall inside an expected range. 
        # Any combination of min_value and max_value is allowed, and the range can be inclusive or exclusive. 
        # Provide a where argument to filter to specific records only.
        
        # In addition to comparisons to a scalar value, you can also compare to another column's values.
        # Any data type that supports the > or < operators can be compared, 
        # so you could also run tests like checking that all order dates are in the past.
        tests:
          - dbt_utils.accepted_range:
              max_value: current_date
              #inclusive is true by default

      - name: order_tracking_id
        description: ""

      - name: estimated_delivery_at_utc
        description: ""

      - name: delivered_at_utc
        description: ""

      - name: order_status
        description: ""
        tests:
          - accepted_values:
              values: ['shipped', 'preparing', 'delivered']

      - name: delivery_status
        description: ""

      - name: days_to_deliver
        description: ""
        tests:
          - positive_values

      - name: order_cost_usd
        description: ""
        tests:
          - positive_values

      - name: shipping_cost_usd
        description: ""
        tests:
          - dbt_utils.accepted_range:   ## shipping costs must be greater than 0 (numbers only?)
              min_value: 0
              inclusive: true

      - name: order_total_usd
        description: ""
        tests:
          - positive_values

      - name: order_shipping_service
        description: ""

      - name: user_id
        description: ""
        tests:
          - not_null
          
      - name: user_first_name
        description: ""

      - name: user_last_name
        description: ""

      - name: order_promo_discount
        description: ""

      - name: order_delivery_address
        description: ""

      - name: order_delivery_zipcode
        description: ""

      - name: order_delivery_state
        description: ""

      - name: order_delivery_country
        description: ""

  - name: dim_products
    description: ""
    columns:
      - name: product_id
        description: ""
        tests:
          - not_null
          - unique
        # used to run only tests on columns with this tag: 
        # "dbt test --select tag:my_test_tag"
        tags: ['unique_key_tag']  

      - name: product_name
        description: ""

      - name: product_price_usd
        description: ""

      - name: product_inventory
        description: ""
        tests:
          - dbt_utils.accepted_range:   ## shipping costs must be greater than 0 (numbers only?)
              min_value: 0
              inclusive: true

      - name: is_out_of_stock
        description: ""

      - name: product_total_quantity_sold
        description: ""

      - name: product_date_most_recently_sold_at
        description: ""

      - name: repurchase_rate
        description: ""

  - name: fact_shipping
    description: ""
    columns:
      - name: shipping_service
        description: ""

      - name: num_orders_shipped
        description: ""

      - name: order_total_usd
        description: ""

      - name: shipping_costs_usd
        description: ""

      - name: avg_delivery_days
        description: ""

      - name: avg_delivery_time
        description: ""

      - name: delivered_late
        description: ""

      - name: delivered_on_time
        description: ""

      - name: timely_delivery_pct
        description: ""